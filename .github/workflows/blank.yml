name: Cloud PC Setup (Manual Tailscale Login + User + RDP + Dropbox Wallpaper + Dark Mode + Welcome)

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest
    timeout-minutes: 300  # 5 hours

    steps:
      - name: Install Tailscale
        shell: powershell
        run: |
          Invoke-WebRequest https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe -OutFile tailscale-installer.exe
          Start-Process .\tailscale-installer.exe -ArgumentList "/quiet" -Wait
          Remove-Item .\tailscale-installer.exe

      - name: Run Tailscale up (manual auth)
        shell: cmd
        run: |
          "C:\Program Files\Tailscale\tailscale.exe" up

      - name: Create local user and grant admin/RDP
        shell: powershell
        run: |
          $pw = "act3-1234"
          $secure = ConvertTo-SecureString $pw -AsPlainText -Force

          if (-not (Get-LocalUser -Name 'clouduser' -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name 'clouduser' -Password $secure -FullName 'Cloud User' -Description 'Temporary Cloud PC user' -PasswordNeverExpires:$true
          }

          Enable-LocalUser -Name 'clouduser'
          Add-LocalGroupMember -Group "Administrators" -Member 'clouduser' -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member 'clouduser' -ErrorAction SilentlyContinue
          Write-Host "Created user 'clouduser' with password: $pw"

      - name: Download wallpaper (from Dropbox)
        shell: powershell
        run: |
          $url = "https://www.dropbox.com/scl/fi/tp8sudlgesdl8l2mc6ocn/file_000000002f3061f4b6eb595468ca6321-1.png?rlkey=d8agt52cu0atv9z5vqzw4vpkm&st=1y3w3zot&dl=1"
          $wallpaperPath = "C:\Users\Public\wallpaper.png"
          Invoke-WebRequest $url -OutFile $wallpaperPath -UseBasicParsing

      - name: Create first-logon script (Wallpaper + Dark Mode + Notepad)
        shell: powershell
        run: |
          $publicDesktop = "C:\Users\Public\Desktop"
          New-Item -Type Directory -Path $publicDesktop -Force | Out-Null
          $msgPath = Join-Path $publicDesktop "welcome.txt"
          $welcomeLines = @(
            'Your PC Starts here! Code/Program/Game (May be laggy) or do anything you want! (NO MINING!!!)',
            'MADE BY DANIEL 64!!!!!'
          )
          $welcomeLines -join [Environment]::NewLine | Set-Content -Path $msgPath -Encoding UTF8

          $scriptPath = "C:\Users\Public\clouduser-firstlogon.ps1"
          $scriptLines = @(
            'Start-Sleep -Seconds 5',
            '$wallpaper = "C:\Users\Public\wallpaper.png"',
            'if (Test-Path $wallpaper) {',
            '  Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name Wallpaper -Value $wallpaper',
            '  Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name WallpaperStyle -Value 10',
            '  Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name TileWallpaper -Value 0',
            '  RUNDLL32.EXE user32.dll,UpdatePerUserSystemParameters 1, True',
            '}',
            '# Enable full dark mode (system + apps)',
            'reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f',
            'reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f',
            'Start-Process notepad.exe "C:\Users\Public\Desktop\welcome.txt"'
          )
          $scriptLines -join [Environment]::NewLine | Set-Content -Path $scriptPath -Encoding UTF8

          $action    = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-NoProfile -ExecutionPolicy Bypass -File `"$scriptPath`""
          $trigger   = New-ScheduledTaskTrigger -AtLogOn -User "clouduser"
          $principal = New-ScheduledTaskPrincipal -UserId "clouduser" -LogonType Interactive -RunLevel Limited
          $settings  = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries

          if (Get-ScheduledTask -TaskName "CloudUserFirstLogon" -ErrorAction SilentlyContinue) {
            Unregister-ScheduledTask -TaskName "CloudUserFirstLogon" -Confirm:$false
          }
          Register-ScheduledTask -TaskName "CloudUserFirstLogon" -Action $action -Trigger $trigger -Principal $principal -Settings $settings

      - name: Keep runner alive for 5 hours
        shell: powershell
        run: |
          Start-Sleep -Seconds 18000
